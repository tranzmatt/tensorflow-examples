apply plugin: 'de.undercouch.download'

class DownloadUrlTask extends DefaultTask {
    @Input
    String sourceUrl

    @OutputFile
    File target

    @TaskAction
    void download() {
        ant.get(src: sourceUrl, dest: target)
    }
}

def downloadAndExtract(srcUrl, tarFile, extractedFile, finalDest) {
    download {
        src srcUrl
        dest tarFile
        overwrite true
    }

    copy {
        from tarTree(resources.gzip(tarFile))
        into project.ext.ASSET_DIR
    }

    copy {
        from file("${project.ext.ASSET_DIR}/${extractedFile}")
        into file(finalDest.parentFile)
        rename { String fileName ->
            finalDest.name
        }
    }

    delete tarFile
    delete file("${project.ext.ASSET_DIR}/${extractedFile}")
}

task downloadPosenetModel(type: DownloadUrlTask) {
    def modelPosenetDownloadUrl = "https://storage.googleapis.com/download.tensorflow.org/models/tflite/posenet_mobilenet_v1_100_257x257_multi_kpt_stripped.tflite"
    doFirst {
        println "Downloading ${modelPosenetDownloadUrl}"
    }
    sourceUrl = "${modelPosenetDownloadUrl}"
    target = file("${project.ext.ASSET_DIR}/posenet.tflite")
}

task downloadMovenetLightningModel {
    doLast {
        downloadAndExtract(
                'https://www.kaggle.com/api/v1/models/google/movenet/tfLite/singlepose-lightning-tflite-float16/1/download',
                file("${project.ext.ASSET_DIR}/movenet_lightning.tar.gz"),
                '1.tflite',
                file("${project.ext.ASSET_DIR}/movenet_lightning.tflite")
        )
    }
}

task downloadMovenetThunderModel {
    doLast {
        downloadAndExtract(
                'https://www.kaggle.com/api/v1/models/google/movenet/tfLite/singlepose-thunder-tflite-float16/1/download',
                file("${project.ext.ASSET_DIR}/movenet_thunder.tar.gz"),
                '1.tflite',
                file("${project.ext.ASSET_DIR}/movenet_thunder.tflite")
        )
    }
}

task downloadMovenetMultiPoseModel {
    doLast {
        downloadAndExtract(
                'https://www.kaggle.com/api/v1/models/google/movenet/tfLite/multipose-lightning-tflite-float16/1/download',
                file("${project.ext.ASSET_DIR}/movenet_multipose_fp16.tar.gz"),
                '1.tflite',
                file("${project.ext.ASSET_DIR}/movenet_multipose_fp16.tflite")
        )
    }
}

task downloadPoseClassifierModel(type: DownloadUrlTask) {
    def modelPoseClassifierDownloadUrl = "https://storage.googleapis.com/download.tensorflow.org/models/tflite/pose_classifier/yoga_classifier.tflite"
    doFirst {
        println "Downloading ${modelPoseClassifierDownloadUrl}"
    }
    sourceUrl = "${modelPoseClassifierDownloadUrl}"
    target = file("${project.ext.ASSET_DIR}/classifier.tflite")
}

task downloadModel {
    dependsOn downloadPosenetModel
    dependsOn downloadMovenetLightningModel
    dependsOn downloadMovenetThunderModel
    dependsOn downloadPoseClassifierModel
    dependsOn downloadMovenetMultiPoseModel
}

preBuild.dependsOn downloadModel
